<?xml version="1.0" encoding="UTF-8"?>
<web-app>
    <display-name>Archetype Created Web Application</display-name>
    <!--
      web.xml中加载顺序：
        context-param -> listener -> filter -> servlet
        spring容器加载方式有两种：
           1)在listerner中加载，对应类为org.springframework.web.context.ContextLoaderListener
           2)在servlet中加载吗，对应类为org.springframework.web.context.ContextLoaderServlet
         至于如何选择，可根据应用情况，因为lisener比servlet加载要早，所以如果有需要较早初始化的数据时，比如filter
         只能读到listener中设置的数据，如果filter需要初始化一些spring的初始化数据，则建议使用listerner加载容器

         filter是servlet的加强版，在用户请求到达servlet之前和servlet处理之后可以对请求和响应做处理，他俩的生命周期
         相同。


    -->
    <context-param>
        <param-name>profile-name</param-name>
        <param-value>dev</param-value>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath*:spring-config.xml</param-value>
    </context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <listener-class>cn.su.listener.MyServletContextListener</listener-class>
    </listener>
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>cn.su.EncodeFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>false</param-value>
        </init-param>
    </filter>
    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>
    <welcome-file-list>
        <welcome-file>index.ftl</welcome-file>
    </welcome-file-list>
    <error-page>
        <error-code>404</error-code>
        <location>/404.ftl</location>
    </error-page>


</web-app>
